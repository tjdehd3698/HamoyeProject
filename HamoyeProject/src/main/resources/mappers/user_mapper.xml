<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="sql.hamoye.user_mapper">
	<resultMap type="user" id="userWithPointAndAccountAndEcoChallenge">
		<id column="user_id" property="userId"/>
		<result column="account_number" property ="accountNumber"/>
		<result column="eco_challenge_id" property ="ecoChallengeId"/>
		<result column="point_id" property ="pointId"/>
		<association property="point" javaType="point">
			<id column="point_id" property="pointId"/>
			<result column="total_point" property="totalPoint"/>
		</association>
		<association property="account" javaType="account">
			<id column="account_id" property="accountId"/>
			<result column="balance" property="balance"/>
			<result column="prime_rate" property="primeRate"/>
		</association>
		<association property="ecoChallenge" javaType="ecoChallenge">
			<id column="eco_challenge_id" property="ecoChallengeId"/>
			<result column="eco_challenge_name" property="ecoChallengeName"/>
			<result column="prime_rate" property="primeRate"/>
		</association>
	</resultMap>
	

	<!--회원 아이디 중복 검사 + 회원/관리자 로그인 -->
	<select id="userIdPassword" parameterType="user" resultType="string">
		select user_id
		from users
		where user_id =#{userId} and is_withdraw = 0
		<if test="userPassword != null">
			and user_password=#{userPassword}
		</if>
		<if test="isAdmin==0">
			and is_admin=0
		</if>
		<if test="isAdmin == 1">
			and is_admin = 1
		</if>
	</select>
	
	<insert id="registerUser" parameterType="user">
		insert into 
		users(USER_ID,USER_PASSWORD,USER_NAME,USER_AGE,USER_ADDRESS,REGISTER_DATE,POINT_ID,BIRTHDAY,GENDER,EMAIL)
		values(#{userId},#{userPassword},#{userName},#{userAge},#{userAddress},to_date(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'),#{pointId},#{birthday},#{gender},#{email})
	</insert>
	
	<update id="joinAccount" parameterType="user">
		update users
		set account_number=#{accountNumber}, eco_challenge_id=#{ecoChallengeId}
		where user_id = #{userId} and is_withdraw = 0
	</update>
	
	<update id="updateUserPassword" parameterType="user">
		update users
		set user_password=#{userPassword}
		where user_id =#{user_id} and email=#{email} and user_name=#{user_name}
	</update>
	
	<update id="updateUser" parameterType="user">
		update users
		set user_password=#{userPassword}, email=#{email}, user_address =#{userAddress}
		where user_id =#{value}
	</update>
	
	<update id="withdrawUser" parameterType="string">
		update users
		set is_withdraw=1
		where user_id = #{value}
	</update>
	
	<select id="getUserInfo" parameterType="string" resultType="user">
		select 
		user_id, user_password, birthday, email, user_name, user_address, register_date
		from users
		where user_id =#{value}
	</select>
	
	<select id="getMypageInfo" parameterType="string" resultMap="userWithPointAndAccountAndEcoChallenge">
		select 
		u.user_id, a.account_number, a.balance, p.point_id, p.total_point, e.eco_challenge_id, e.eco_challenge_name
		from users u 
		join account a on u.account_number =a.account_number
		join point p on u.point_id = p.point_id
		join eco_challenge e on u.eco_challenge_id = e.eco_challenge_id
		where e.is_delete = 0 and u.user_id = #{value}
	</select>
	
	<select id="checkEcoChallenge" parameterType="string" resultType="string">
		select
		eco_challenge_id
		from users
		where user_id = #{value}
	</select>
	
</mapper>









